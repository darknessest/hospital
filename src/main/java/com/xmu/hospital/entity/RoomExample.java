package com.xmu.hospital.entity;

import java.util.ArrayList;
import java.util.List;

public class RoomExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table room
     *
     * @mbg.generated Fri Jul 10 10:17:58 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table room
     *
     * @mbg.generated Fri Jul 10 10:17:58 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table room
     *
     * @mbg.generated Fri Jul 10 10:17:58 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table room
     *
     * @mbg.generated Fri Jul 10 10:17:58 CST 2020
     */
    public RoomExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table room
     *
     * @mbg.generated Fri Jul 10 10:17:58 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table room
     *
     * @mbg.generated Fri Jul 10 10:17:58 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table room
     *
     * @mbg.generated Fri Jul 10 10:17:58 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table room
     *
     * @mbg.generated Fri Jul 10 10:17:58 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table room
     *
     * @mbg.generated Fri Jul 10 10:17:58 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table room
     *
     * @mbg.generated Fri Jul 10 10:17:58 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table room
     *
     * @mbg.generated Fri Jul 10 10:17:58 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table room
     *
     * @mbg.generated Fri Jul 10 10:17:58 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table room
     *
     * @mbg.generated Fri Jul 10 10:17:58 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table room
     *
     * @mbg.generated Fri Jul 10 10:17:58 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table room
     *
     * @mbg.generated Fri Jul 10 10:17:58 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andRIdIsNull() {
            addCriterion("r_id is null");
            return (Criteria) this;
        }

        public Criteria andRIdIsNotNull() {
            addCriterion("r_id is not null");
            return (Criteria) this;
        }

        public Criteria andRIdEqualTo(Long value) {
            addCriterion("r_id =", value, "rId");
            return (Criteria) this;
        }

        public Criteria andRIdNotEqualTo(Long value) {
            addCriterion("r_id <>", value, "rId");
            return (Criteria) this;
        }

        public Criteria andRIdGreaterThan(Long value) {
            addCriterion("r_id >", value, "rId");
            return (Criteria) this;
        }

        public Criteria andRIdGreaterThanOrEqualTo(Long value) {
            addCriterion("r_id >=", value, "rId");
            return (Criteria) this;
        }

        public Criteria andRIdLessThan(Long value) {
            addCriterion("r_id <", value, "rId");
            return (Criteria) this;
        }

        public Criteria andRIdLessThanOrEqualTo(Long value) {
            addCriterion("r_id <=", value, "rId");
            return (Criteria) this;
        }

        public Criteria andRIdIn(List<Long> values) {
            addCriterion("r_id in", values, "rId");
            return (Criteria) this;
        }

        public Criteria andRIdNotIn(List<Long> values) {
            addCriterion("r_id not in", values, "rId");
            return (Criteria) this;
        }

        public Criteria andRIdBetween(Long value1, Long value2) {
            addCriterion("r_id between", value1, value2, "rId");
            return (Criteria) this;
        }

        public Criteria andRIdNotBetween(Long value1, Long value2) {
            addCriterion("r_id not between", value1, value2, "rId");
            return (Criteria) this;
        }

        public Criteria andRAddressIsNull() {
            addCriterion("r_address is null");
            return (Criteria) this;
        }

        public Criteria andRAddressIsNotNull() {
            addCriterion("r_address is not null");
            return (Criteria) this;
        }

        public Criteria andRAddressEqualTo(String value) {
            addCriterion("r_address =", value, "rAddress");
            return (Criteria) this;
        }

        public Criteria andRAddressNotEqualTo(String value) {
            addCriterion("r_address <>", value, "rAddress");
            return (Criteria) this;
        }

        public Criteria andRAddressGreaterThan(String value) {
            addCriterion("r_address >", value, "rAddress");
            return (Criteria) this;
        }

        public Criteria andRAddressGreaterThanOrEqualTo(String value) {
            addCriterion("r_address >=", value, "rAddress");
            return (Criteria) this;
        }

        public Criteria andRAddressLessThan(String value) {
            addCriterion("r_address <", value, "rAddress");
            return (Criteria) this;
        }

        public Criteria andRAddressLessThanOrEqualTo(String value) {
            addCriterion("r_address <=", value, "rAddress");
            return (Criteria) this;
        }

        public Criteria andRAddressLike(String value) {
            addCriterion("r_address like", value, "rAddress");
            return (Criteria) this;
        }

        public Criteria andRAddressNotLike(String value) {
            addCriterion("r_address not like", value, "rAddress");
            return (Criteria) this;
        }

        public Criteria andRAddressIn(List<String> values) {
            addCriterion("r_address in", values, "rAddress");
            return (Criteria) this;
        }

        public Criteria andRAddressNotIn(List<String> values) {
            addCriterion("r_address not in", values, "rAddress");
            return (Criteria) this;
        }

        public Criteria andRAddressBetween(String value1, String value2) {
            addCriterion("r_address between", value1, value2, "rAddress");
            return (Criteria) this;
        }

        public Criteria andRAddressNotBetween(String value1, String value2) {
            addCriterion("r_address not between", value1, value2, "rAddress");
            return (Criteria) this;
        }

        public Criteria andRDescIsNull() {
            addCriterion("r_desc is null");
            return (Criteria) this;
        }

        public Criteria andRDescIsNotNull() {
            addCriterion("r_desc is not null");
            return (Criteria) this;
        }

        public Criteria andRDescEqualTo(String value) {
            addCriterion("r_desc =", value, "rDesc");
            return (Criteria) this;
        }

        public Criteria andRDescNotEqualTo(String value) {
            addCriterion("r_desc <>", value, "rDesc");
            return (Criteria) this;
        }

        public Criteria andRDescGreaterThan(String value) {
            addCriterion("r_desc >", value, "rDesc");
            return (Criteria) this;
        }

        public Criteria andRDescGreaterThanOrEqualTo(String value) {
            addCriterion("r_desc >=", value, "rDesc");
            return (Criteria) this;
        }

        public Criteria andRDescLessThan(String value) {
            addCriterion("r_desc <", value, "rDesc");
            return (Criteria) this;
        }

        public Criteria andRDescLessThanOrEqualTo(String value) {
            addCriterion("r_desc <=", value, "rDesc");
            return (Criteria) this;
        }

        public Criteria andRDescLike(String value) {
            addCriterion("r_desc like", value, "rDesc");
            return (Criteria) this;
        }

        public Criteria andRDescNotLike(String value) {
            addCriterion("r_desc not like", value, "rDesc");
            return (Criteria) this;
        }

        public Criteria andRDescIn(List<String> values) {
            addCriterion("r_desc in", values, "rDesc");
            return (Criteria) this;
        }

        public Criteria andRDescNotIn(List<String> values) {
            addCriterion("r_desc not in", values, "rDesc");
            return (Criteria) this;
        }

        public Criteria andRDescBetween(String value1, String value2) {
            addCriterion("r_desc between", value1, value2, "rDesc");
            return (Criteria) this;
        }

        public Criteria andRDescNotBetween(String value1, String value2) {
            addCriterion("r_desc not between", value1, value2, "rDesc");
            return (Criteria) this;
        }

        public Criteria andRMaxIsNull() {
            addCriterion("r_max is null");
            return (Criteria) this;
        }

        public Criteria andRMaxIsNotNull() {
            addCriterion("r_max is not null");
            return (Criteria) this;
        }

        public Criteria andRMaxEqualTo(Byte value) {
            addCriterion("r_max =", value, "rMax");
            return (Criteria) this;
        }

        public Criteria andRMaxNotEqualTo(Byte value) {
            addCriterion("r_max <>", value, "rMax");
            return (Criteria) this;
        }

        public Criteria andRMaxGreaterThan(Byte value) {
            addCriterion("r_max >", value, "rMax");
            return (Criteria) this;
        }

        public Criteria andRMaxGreaterThanOrEqualTo(Byte value) {
            addCriterion("r_max >=", value, "rMax");
            return (Criteria) this;
        }

        public Criteria andRMaxLessThan(Byte value) {
            addCriterion("r_max <", value, "rMax");
            return (Criteria) this;
        }

        public Criteria andRMaxLessThanOrEqualTo(Byte value) {
            addCriterion("r_max <=", value, "rMax");
            return (Criteria) this;
        }

        public Criteria andRMaxIn(List<Byte> values) {
            addCriterion("r_max in", values, "rMax");
            return (Criteria) this;
        }

        public Criteria andRMaxNotIn(List<Byte> values) {
            addCriterion("r_max not in", values, "rMax");
            return (Criteria) this;
        }

        public Criteria andRMaxBetween(Byte value1, Byte value2) {
            addCriterion("r_max between", value1, value2, "rMax");
            return (Criteria) this;
        }

        public Criteria andRMaxNotBetween(Byte value1, Byte value2) {
            addCriterion("r_max not between", value1, value2, "rMax");
            return (Criteria) this;
        }

        public Criteria andRNumIsNull() {
            addCriterion("r_num is null");
            return (Criteria) this;
        }

        public Criteria andRNumIsNotNull() {
            addCriterion("r_num is not null");
            return (Criteria) this;
        }

        public Criteria andRNumEqualTo(Byte value) {
            addCriterion("r_num =", value, "rNum");
            return (Criteria) this;
        }

        public Criteria andRNumNotEqualTo(Byte value) {
            addCriterion("r_num <>", value, "rNum");
            return (Criteria) this;
        }

        public Criteria andRNumGreaterThan(Byte value) {
            addCriterion("r_num >", value, "rNum");
            return (Criteria) this;
        }

        public Criteria andRNumGreaterThanOrEqualTo(Byte value) {
            addCriterion("r_num >=", value, "rNum");
            return (Criteria) this;
        }

        public Criteria andRNumLessThan(Byte value) {
            addCriterion("r_num <", value, "rNum");
            return (Criteria) this;
        }

        public Criteria andRNumLessThanOrEqualTo(Byte value) {
            addCriterion("r_num <=", value, "rNum");
            return (Criteria) this;
        }

        public Criteria andRNumIn(List<Byte> values) {
            addCriterion("r_num in", values, "rNum");
            return (Criteria) this;
        }

        public Criteria andRNumNotIn(List<Byte> values) {
            addCriterion("r_num not in", values, "rNum");
            return (Criteria) this;
        }

        public Criteria andRNumBetween(Byte value1, Byte value2) {
            addCriterion("r_num between", value1, value2, "rNum");
            return (Criteria) this;
        }

        public Criteria andRNumNotBetween(Byte value1, Byte value2) {
            addCriterion("r_num not between", value1, value2, "rNum");
            return (Criteria) this;
        }

        public Criteria andRHidIsNull() {
            addCriterion("r_hid is null");
            return (Criteria) this;
        }

        public Criteria andRHidIsNotNull() {
            addCriterion("r_hid is not null");
            return (Criteria) this;
        }

        public Criteria andRHidEqualTo(Long value) {
            addCriterion("r_hid =", value, "rHid");
            return (Criteria) this;
        }

        public Criteria andRHidNotEqualTo(Long value) {
            addCriterion("r_hid <>", value, "rHid");
            return (Criteria) this;
        }

        public Criteria andRHidGreaterThan(Long value) {
            addCriterion("r_hid >", value, "rHid");
            return (Criteria) this;
        }

        public Criteria andRHidGreaterThanOrEqualTo(Long value) {
            addCriterion("r_hid >=", value, "rHid");
            return (Criteria) this;
        }

        public Criteria andRHidLessThan(Long value) {
            addCriterion("r_hid <", value, "rHid");
            return (Criteria) this;
        }

        public Criteria andRHidLessThanOrEqualTo(Long value) {
            addCriterion("r_hid <=", value, "rHid");
            return (Criteria) this;
        }

        public Criteria andRHidIn(List<Long> values) {
            addCriterion("r_hid in", values, "rHid");
            return (Criteria) this;
        }

        public Criteria andRHidNotIn(List<Long> values) {
            addCriterion("r_hid not in", values, "rHid");
            return (Criteria) this;
        }

        public Criteria andRHidBetween(Long value1, Long value2) {
            addCriterion("r_hid between", value1, value2, "rHid");
            return (Criteria) this;
        }

        public Criteria andRHidNotBetween(Long value1, Long value2) {
            addCriterion("r_hid not between", value1, value2, "rHid");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table room
     *
     * @mbg.generated do_not_delete_during_merge Fri Jul 10 10:17:58 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table room
     *
     * @mbg.generated Fri Jul 10 10:17:58 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}